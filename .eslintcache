[{"/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/index.js":"1","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/store/store.js":"2","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/root-cmp.jsx":"3","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/store/stay.reducer.js":"4","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/store/user.reducer.js":"5","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/store/order.reducer.js":"6","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/store/review.reducer.js":"7","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/routes.js":"8","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/services/user.service.js":"9","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/cmps/app-footer.jsx":"10","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/cmps/header-cmps/app-header.jsx":"11","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/services/event-bus.service.js":"12","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/store/review.actions.js":"13","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/services/http.service.js":"14","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/services/async-storage.service.js":"15","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/cmps/login-signup.jsx":"16","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/cmps/my-orders.jsx":"17","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/pages/stay-app.jsx":"18","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/pages/stay-details.jsx":"19","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/pages/add-edit-stay.jsx":"20","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/pages/reserve-summary.jsx":"21","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/cmps/dashboard/dashboard.jsx":"22","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/cmps/header-cmps/header-filter.jsx":"23","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/cmps/header-cmps/header-expanded-filter.jsx":"24","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/cmps/header-cmps/header-profile.jsx":"25","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/services/review.service.js":"26","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/store/user.actions.js":"27","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/services/order.service.js":"28","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/store/stay.actions.js":"29","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/services/stay.service.js":"30","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/store/order.actions.js":"31","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/hooks/useFormRegister.js":"32","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/cmps/stay-list.jsx":"33","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/cmps/calender.jsx":"34","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/cmps/reserve.jsx":"35","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/cmps/stay-review.jsx":"36","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/cmps/header-cmps/details-header.jsx":"37","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/cmps/calc-reserve.jsx":"38","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/cmps/stayDetails/stay-air-cover.jsx":"39","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/cmps/filter/stay-filter.jsx":"40","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/cmps/stayDetails/stay-keys.jsx":"41","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/cmps/stayDetails/stay-amenities.jsx":"42","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/services/util.service.js":"43","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/cmps/header-cmps/guests-selection.jsx":"44","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/cmps/calender-date-picker.jsx":"45","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/hooks/useEffectUpdate.js":"46","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/cmps/stay-preview.jsx":"47","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/cmps/filter/expanded-filter.jsx":"48","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/cmps/filter/filter-by-lables.jsx":"49","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/cmps/user-msg.jsx":"50","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/pages/dashboard.jsx":"51","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/pages/table-orders.jsx":"52","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/services/socket.service.js":"53"},{"size":841,"mtime":1668456374198,"results":"54","hashOfConfig":"55"},{"size":1089,"mtime":1667916578001,"results":"56","hashOfConfig":"55"},{"size":2316,"mtime":1667916577992,"results":"57","hashOfConfig":"55"},{"size":2150,"mtime":1667916578001,"results":"58","hashOfConfig":"55"},{"size":1393,"mtime":1667916578002,"results":"59","hashOfConfig":"55"},{"size":517,"mtime":1669889350616,"results":"60","hashOfConfig":"55"},{"size":647,"mtime":1667916577998,"results":"61","hashOfConfig":"55"},{"size":1095,"mtime":1669905817403,"results":"62","hashOfConfig":"55"},{"size":3590,"mtime":1670326411337,"results":"63","hashOfConfig":"55"},{"size":228,"mtime":1668072791766,"results":"64","hashOfConfig":"55"},{"size":2365,"mtime":1668939130577,"results":"65","hashOfConfig":"55"},{"size":1235,"mtime":1668071826068,"results":"66","hashOfConfig":"55"},{"size":1522,"mtime":1668502291734,"results":"67","hashOfConfig":"55"},{"size":1120,"mtime":1667916577995,"results":"68","hashOfConfig":"55"},{"size":2156,"mtime":1668502638949,"results":"69","hashOfConfig":"55"},{"size":8680,"mtime":1670331474488,"results":"70","hashOfConfig":"55"},{"size":4757,"mtime":1669905509166,"results":"71","hashOfConfig":"55"},{"size":1383,"mtime":1669549152055,"results":"72","hashOfConfig":"55"},{"size":5384,"mtime":1668502635905,"results":"73","hashOfConfig":"55"},{"size":1797,"mtime":1667923305677,"results":"74","hashOfConfig":"55"},{"size":1885,"mtime":1667916577991,"results":"75","hashOfConfig":"55"},{"size":6228,"mtime":1667922534670,"results":"76","hashOfConfig":"55"},{"size":1314,"mtime":1668502915098,"results":"77","hashOfConfig":"55"},{"size":3704,"mtime":1668503044529,"results":"78","hashOfConfig":"55"},{"size":2328,"mtime":1670331253096,"results":"79","hashOfConfig":"55"},{"size":1867,"mtime":1668502649352,"results":"80","hashOfConfig":"55"},{"size":2315,"mtime":1670323870723,"results":"81","hashOfConfig":"55"},{"size":4163,"mtime":1669900537287,"results":"82","hashOfConfig":"55"},{"size":3895,"mtime":1668951836906,"results":"83","hashOfConfig":"55"},{"size":5455,"mtime":1668952919462,"results":"84","hashOfConfig":"55"},{"size":1641,"mtime":1669905436530,"results":"85","hashOfConfig":"55"},{"size":2347,"mtime":1667916577990,"results":"86","hashOfConfig":"55"},{"size":397,"mtime":1667916577938,"results":"87","hashOfConfig":"55"},{"size":2059,"mtime":1668502928085,"results":"88","hashOfConfig":"55"},{"size":11118,"mtime":1668069899864,"results":"89","hashOfConfig":"55"},{"size":2008,"mtime":1667916577939,"results":"90","hashOfConfig":"55"},{"size":1305,"mtime":1667996925060,"results":"91","hashOfConfig":"55"},{"size":1438,"mtime":1668504015783,"results":"92","hashOfConfig":"55"},{"size":523,"mtime":1667916577940,"results":"93","hashOfConfig":"55"},{"size":1889,"mtime":1667923309797,"results":"94","hashOfConfig":"55"},{"size":1237,"mtime":1667916577942,"results":"95","hashOfConfig":"55"},{"size":12829,"mtime":1667916577941,"results":"96","hashOfConfig":"55"},{"size":1257,"mtime":1667916577997,"results":"97","hashOfConfig":"55"},{"size":4186,"mtime":1668502920213,"results":"98","hashOfConfig":"55"},{"size":2283,"mtime":1667916577927,"results":"99","hashOfConfig":"55"},{"size":308,"mtime":1667916577990,"results":"100","hashOfConfig":"55"},{"size":1337,"mtime":1667993933392,"results":"101","hashOfConfig":"55"},{"size":3797,"mtime":1667916577927,"results":"102","hashOfConfig":"55"},{"size":2781,"mtime":1668502924844,"results":"103","hashOfConfig":"55"},{"size":905,"mtime":1668071695605,"results":"104","hashOfConfig":"55"},{"size":9033,"mtime":1669537230678,"results":"105","hashOfConfig":"55"},{"size":6392,"mtime":1669905468312,"results":"106","hashOfConfig":"55"},{"size":1497,"mtime":1670326384169,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"1d108sp",{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"110"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"110"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"110"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"110"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"158"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"168"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"110"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"110"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"110"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"110"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"110"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"110"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"110"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"110"},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"110"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"110"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/index.js",[],["233","234"],"/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/store/store.js",[],"/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/root-cmp.jsx",[],"/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/store/stay.reducer.js",[],"/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/store/user.reducer.js",[],"/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/store/order.reducer.js",[],"/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/store/review.reducer.js",[],"/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/routes.js",[],"/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/services/user.service.js",[],"/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/cmps/app-footer.jsx",[],"/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/cmps/header-cmps/app-header.jsx",[],"/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/services/event-bus.service.js",[],"/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/store/review.actions.js",[],"/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/services/http.service.js",[],"/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/services/async-storage.service.js",["235"],"\nexport const storageService = {\n    query,\n    get,\n    post,\n    put,\n    remove,\n    postMany\n}\n\nconst BASE_URL = `stay/`\n\nfunction query(entityType, delay = 600) {\n    var entities = JSON.parse(localStorage.getItem(entityType)) || []\n\n    return new Promise((resolve, reject)=>{\n        setTimeout(()=>{\n            // reject('OOOOPs')\n            // _save(entityType, entities)\n            resolve(entities)\n        }, delay)   \n    })\n    // return Promise.resolve(entities)\n}\n\nfunction get(entityType, entityId) {\n    return query(entityType)\n        .then(entities => entities.find(entity => entity._id === entityId))\n}\n\nfunction post(entityType, newEntity) {\n    newEntity._id = _makeId()\n    return query(entityType)\n        .then(entities => {\n            entities.push(newEntity)\n            _save(entityType, entities)\n            return newEntity\n        })\n}\n\nfunction put(entityType, updatedEntity) {\n    return query(entityType)\n        .then(entities => {\n            const idx = entities.findIndex(entity => entity._id === updatedEntity._id)\n            entities.splice(idx, 1, updatedEntity)\n            _save(entityType, entities)\n            return updatedEntity\n        })\n}\n\nfunction remove(entityType, entityId) {\n    return query(entityType)\n        .then(entities => {\n            const idx = entities.findIndex(entity => entity._id === entityId)\n            entities.splice(idx, 1)\n            _save(entityType, entities)\n        })\n}\n\nfunction _save(entityType, entities) {\n    localStorage.setItem(entityType, JSON.stringify(entities))\n}\n\nfunction _makeId(length = 5) {\n    var text = ''\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n    for (var i = 0; i < length; i++) {\n        text += possible.charAt(Math.floor(Math.random() * possible.length))\n    }\n    return text\n}\n\nfunction postMany(entityType, newEntities) {\n    return query(entityType)\n        .then(entities => {\n            // newEntities = newEntities.map(entity => ({...entity, _id: _makeId()}))\n            entities.push(...newEntities)\n            _save(entityType, entities)\n            return entities\n        })\n}","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/cmps/login-signup.jsx",["236"],"/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/cmps/my-orders.jsx",["237","238","239","240"],"/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/pages/stay-app.jsx",["241","242"],"import React, { useEffect } from 'react'\n// import { connect } from 'react-redux'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { loadStays, setFilterBy } from '../store/stay.actions'\nimport { StayList } from '../cmps/stay-list'\nimport { StayFilter } from '../cmps/filter/stay-filter'\nimport { getOrders } from '../store/order.actions'\n\nexport const StayApp = () => {\n    const { stays, isFilterOpen } = useSelector(state => state.stayModule)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(loadStays())\n        // dispatch(getOrders())\n    }, [])\n\n    const onChangeFilter = (filterBy) => {\n        dispatch(setFilterBy(filterBy))\n        dispatch(loadStays())\n    }\n\n    const onClickFilter = (ev) => {\n        ev.preventDefault()\n        dispatch({\n            type: 'SET_IS_FILTER_OPEN',\n            isFilterOpen: !isFilterOpen\n        })\n        if (!isFilterOpen) dispatch(loadStays())\n    }\n    \n    if (!stays) return <div>Loading...</div>\n    return (\n        <section className={isFilterOpen ? 'filter-open bnb-app full main-layout ' : 'bnb-app full main-layout '}>\n            {/* <div onClick={onClickFilter} className='main-screen' ></div> */}\n            <StayFilter isFilterOpen={isFilterOpen} onChangeFilter={onChangeFilter} onClickFilter={onClickFilter} />\n            <StayList stays={stays} />\n        </section>\n    )\n}","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/pages/stay-details.jsx",["243"],"import { useEffect, useLayoutEffect, useRef } from \"react\"\nimport { useState } from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport { Calender } from \"../cmps/calender\"\nimport { Reserve } from \"../cmps/reserve\"\nimport { stayService } from \"../services/stay.service\"\nimport { Review } from \"../cmps/stay-review\"\nimport { DetailsHeader } from \"../cmps/header-cmps/details-header\"\nimport { StayKeys } from \"../cmps/stayDetails/stay-keys\"\nimport { AirCover } from \"../cmps/stayDetails/stay-air-cover\"\nimport { Amenities } from \"../cmps/stayDetails/stay-amenities\"\n\nimport { ReactComponent as Star } from '../assets/icons/star.svg';\nimport { ReactComponent as Heart } from '../assets/icons/heart.svg';\nimport { ReactComponent as Share } from '../assets/icons/share.svg';\nimport { ReactComponent as User } from '../assets/icons/user.svg';\nimport { useSelector } from \"react-redux\"\n// import { orderService } from \"../services/order.service\"\nimport { useDispatch } from \"react-redux\"\nimport {  getOrder } from \"../store/order.actions\"\n\nexport const StayDetails = () => {\n\n    const [stay, setStay] = useState(null)\n    const [isOpen, setIsOpen] = useState(false)\n    let { order } = useSelector(state => state.orderModule)\n\n    const params = useParams()\n    const dispatch = useDispatch()\n\n    const imgSection = useRef(null)\n    const amenitiesSection = useRef(null)\n    const reviewsSection = useRef(null)\n    const startPhotos = useRef(null)\n\n    const loadStay = () => {\n        const stayId = params.id\n        stayService.getById(stayId).then((stay) => {\n            setStay(stay)\n            loadOrder(stay)\n            // setReviews(reviews)\n        })\n    }\n\n    const loadOrder = (stay) => {\n        if(!order.length) {\n            dispatch(getOrder(stay))\n        }\n\n    }\n\n    useEffect(() => {\n        loadStay()\n        // loadOrder()\n    }, [])\n\n    useLayoutEffect(() => {\n        if (!imgSection.current) return\n        const imgObserver = new IntersectionObserver(onImgObserver, {\n            rootMargin: \"2px 0px 0px\",\n        });\n        imgObserver.observe(imgSection.current)\n\n        function onImgObserver(entries) {\n            if (!imgSection.current) return\n            entries.forEach((entry) => {\n                setIsOpen(!entry.isIntersecting)\n            })\n        }\n    }, [stay])\n\n    const avgRate = () => {\n        return stayService.avgRate(stay)\n    }\n\n\n    if (!stay) return <div>Loading...</div>\n    const rate = avgRate()\n\n    return <div className=\"stay-details\">\n        {(isOpen) ? <DetailsHeader myRef={{ amenitiesSection, reviewsSection, startPhotos }} stay={stay} /> : ''}\n\n        <div className=\"header-details\" ref={startPhotos}>\n            <h1>{stay.name}</h1>\n            <div className=\"mini-details\">\n                <div className=\"mini-info\">\n                    <span className=\"rate-star\"><Star /> {rate} &middot;</span>\n\n                    <button className=\"review-amount\">{stay.reviews.length} reviews</button>\n                    <span className=\"separate-dot\">&middot;</span>\n                    <span className=\"country-code\">{stay.loc.city},{stay.loc.countryCode},{stay.loc.country}</span>\n                </div>\n                <div className=\"details-actions\">\n                    <div className=\"share-details\"><button href=\"#\"><span><Share /></span>Share</button></div>\n                    <div className=\"save-details\"><button href=\"#\"><span><Heart /></span> Save</button></div>\n                </div>\n            </div>\n        </div>\n\n\n        <div className=\"img-details\" ref={imgSection} id=\"img-details\">\n            {stay.imgUrls.map((imgUrl, index) => <img className={`img-${index}`} src={`${stay.imgUrls[index]}`} alt=\"\" srcSet=\"\" key={index} />)}\n        </div>\n\n        <div className=\"main-details\">\n            <div className=\"details-section\">\n                <div className=\"mini-details\">\n                    <div className=\"stay-details\">\n                        <h2>{stay.roomType} hosted by {stay.host.fullname}</h2>\n                        <ol>\n                            <li>\n                                <span>{stay.capacity} guests</span>\n                                <span> &middot;</span>\n                            </li>\n                            <li>\n                                <span>{stay.bathrooms} bathrooms</span>\n                                <span> &middot;</span>\n                            </li>\n                            <li>\n                                <span>{stay.bedrooms} bedrooms</span>\n                            </li>\n\n                        </ol>\n                    </div>\n                    <div className=\"user-photo\"><User /></div>\n                </div>\n\n                <StayKeys />\n\n                <AirCover />\n\n                <div className=\"more-description\">\n                    <div className=\"summary\">{stay.summary}</div>\n                    <button className=\"show-more\">Show more </button>\n                </div>\n\n                <div ref={amenitiesSection}></div>\n                <Amenities stay={stay} />\n\n                <Calender stay={stay} order={order} />\n\n            </div>\n\n            <Reserve stay={stay} avgRate={rate}  />\n        </div>\n\n        <div ref={reviewsSection}></div>\n        <div className=\"reviews-section\"  >\n\n            <Review stay={stay} avgRate={rate} />\n\n        </div>\n    </div>\n\n\n}","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/pages/add-edit-stay.jsx",["244","245"],"// import { upload } from '@testing-library/user-event/dist/upload'\nimport { useEffect, useRef } from 'react'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport { useFormRegister } from '../hooks/useFormRegister'\nimport { addStay, updateStay } from '../store/stay.actions'\n\n\nexport const StayEdit = () => {\n\n    const params = useParams()\n    const navigate = useNavigate()\n    const dispatch = useDispatch()\n\n\n    const [register, setStay, stay] = useFormRegister({\n        name: '',\n        price: ''\n        // img: null\n    })\n\n    const inputRef = useRef()\n\n    useEffect(() => {\n        inputRef.current.focus()\n        const stayId = params.stayId\n        if (!stayId) return\n        // stayService\n        //     .getById(stayId)\n        //     .then((stay) => {\n        //         setStay(stay)\n        //     })\n        //     .catch((err) => {\n        //     })\n    }, [])\n\n    const onSaveStay = (ev) => {\n        ev.preventDefault()\n        if (stay._id) {\n            try {\n                dispatch(updateStay(stay))\n                navigate('/')\n            } catch (err) {\n                console.error('ERROR!', err)\n            }\n        } else {\n            try {\n                dispatch(addStay(stay))\n                navigate('/')\n            } catch (err) {\n                console.error('ERROR!', err)\n            }\n        }\n\n    }\n\n    return (\n        <form onSubmit={onSaveStay}>\n            <h1>{stay._id ? 'Edit' : 'Add'} stay</h1>\n\n            <label htmlFor=\"name\">name</label>\n            <input ref={inputRef} {...register('name', 'text')} />\n\n            <label htmlFor=\"price\">Price</label>\n            <input {...register('price', 'number')} />\n            <button>submit</button>\n        </form>\n    )\n}","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/pages/reserve-summary.jsx",[],"/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/cmps/dashboard/dashboard.jsx",["246","247"],"\nimport * as React from 'react';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport { useState } from \"react\"\nimport { useEffect } from \"react\"\nimport { orderService } from \"../../services/order.service\"\nimport { userService } from \"../../services/user.service\"\n\n\nconst columns = [\n    { id: 'stayName', label: 'stay-name', minWidth: 170 },\n    { id: 'startDate', label: 'arrive-at', minWidth: 100 },\n    { id: 'endDate', label: 'leave-at', minWidth: 100 },\n    {\n        id: 'total',\n        label: 'Total',\n        minWidth: 170,\n        align: 'right',\n        format: (value) => value.toLocaleString('en-US'),\n    },\n    {\n        id: 'status',\n        label: 'status',\n        minWidth: 100\n    }\n\n];\n\nfunction createData(stayName, startDate, endDate, total, status, id) {\n\n    return { stayName, startDate, endDate, total, status, id };\n}\n\n\n\n\nexport function Dashboard() {\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n    const [orders, setOrders] = useState([])\n    const [status, setStatus] = useState()\n\n    const logInUser = userService.getLoggedinUser()\n    let rows = orders.filter(order => order.hostId === logInUser._id)\n        .map(order => createData(order.stay.name, order.startDate, order.endDate, order.total, order.status, order._id))\n\n\n    useEffect(() => {\n        loadOrders()\n    }, [])\n\n    const loadOrders = async () => {\n        const orders = await orderService.query()\n        setOrders(orders)\n    }\n\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n\n    const checkStatus = (value) => {\n        let color\n        switch (value) {\n            case 'pending':\n                color = 'orange'\n                break;\n            case 'confirmed':\n                color = 'green'\n                break;\n            case 'rejected':\n                color = 'red';\n                break;\n            default:\n                color = 'black';\n                break;\n        }\n        return color\n    }\n\n    const handleChange = async (ev, index) => {\n        const value = ev.target.value;\n        const order = await orderService.getById(rows[index].id)\n        order.status = value\n        orderService.save(order)\n        // setStatus(value);\n    }\n\n    if (!rows) return <h1>Loading ..</h1>\n    return (\n        <Paper sx={{ width: '100%', overflow: 'hidden' }}>\n            <TableContainer sx={{ maxHeight: 440 }}>\n                <Table stickyHeader aria-label=\"sticky table\">\n                    <TableHead>\n                        <TableRow>\n                            {columns.map((column) => (\n                                <TableCell\n                                    key={column.id}\n                                    align={column.align}\n                                    style={{ minWidth: column.minWidth }}\n                                >\n                                    {column.label}\n                                </TableCell>\n                            ))}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {rows\n                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                            .map((row, index) => {\n                                return (\n                                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                                        {columns.map((column) => {\n                                            const value = row[column.id];\n                                            return <React.Fragment>\n                                                {column.id === 'status' ?\n                                                    <TableCell key={column.id} align={column.align} style={{ color: checkStatus(value) }}>\n                                                       \n                                                        <select name=\"status\" id=\"status\" onChange={(event) => handleChange(event, index)}>\n                                                            <option value=\"pending\">pending</option>\n                                                            <option value=\"confirmed\">confirmed</option>\n                                                            <option value=\"rejected\">rejected</option>\n                                                            \n                                                        </select>\n\n                                                    </TableCell>\n                                                    :\n\n                                                    <TableCell key={column.id} align={column.align}>\n                                                        {column.format && typeof value === 'number'\n                                                            ? column.format(value)\n                                                            : value}\n                                                    </TableCell>\n                                                }\n\n                                            </React.Fragment>\n\n                                        })}\n                                    </TableRow>\n                                );\n                            })}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <TablePagination\n                rowsPerPageOptions={[10, 25, 100]}\n                component=\"div\"\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onPageChange={handleChangePage}\n                onRowsPerPageChange={handleChangeRowsPerPage}\n            />\n        </Paper>\n    );\n}\n",["248","249"],"/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/cmps/header-cmps/header-filter.jsx",[],"/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/cmps/header-cmps/header-expanded-filter.jsx",[],"/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/cmps/header-cmps/header-profile.jsx",["250"],"/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/services/review.service.js",["251"],"// import { httpService } from './http.service'\nimport { storageService } from './async-storage.service'\n// import { socketService, SOCKET_EVENT_REVIEW_ADDED, SOCKET_EVENT_REVIEW_ABOUT_YOU } from './socket.service'\nimport { getActionRemoveReview, getActionAddReview } from '../store/review.actions'\n\nconst reviewChannel = new BroadcastChannel('reviewChannel')\n\n// ;(() => {\n//   reviewChannel.addEventListener('message', (ev) => {\n//     store.dispatch(ev.data)\n//   })\n//   socketService.on(SOCKET_EVENT_REVIEW_ADDED, (review) => {\n//     console.log('GOT from socket', review)\n//     store.dispatch(getActionAddReview(review))\n//   })\n//   socketService.on(SOCKET_EVENT_REVIEW_ABOUT_YOU, (review) => {\n//     showSuccessMsg(`New review about me ${review.txt}`)\n//   })\n// })()\n\n\n\nexport const reviewService = {\n  add,\n  query,\n  remove\n}\n\n\nfunction query(filterBy) {\n  var queryStr = (!filterBy) ? '' : `?name=${filterBy.name}&sort=anaAref`\n  // return httpService.get(`review${queryStr}`)\n  return storageService.query('review')\n}\n\nasync function remove(reviewId) {\n  // await httpService.delete(`review/${reviewId}`)\n  await storageService.remove('review', reviewId)\n  reviewChannel.postMessage(getActionRemoveReview(reviewId))\n\n\n}\nasync function add(review) {\n  // const addedReview = await httpService.post(`review`, review)\n\n  // review.byUser = userService.getLoggedinUser()\n  // review.aboutUser = await userService.getById(review.aboutUserId)\n  const addedReview = await storageService.post('review', review)\n\n  reviewChannel.postMessage(getActionAddReview(addedReview))\n\n  return addedReview\n}\n\n// This way, we can also subscribe to none-store data change\n// function subscribe(listener) {\n//   reviewChannel.addEventListener('message', listener)\n// }\n// function unsubscribe(listener) {\n//   reviewChannel.removeEventListener('message', listener)\n// }\n",["252","253"],"/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/store/user.actions.js",[],"/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/services/order.service.js",[],"/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/store/stay.actions.js",[],"/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/services/stay.service.js",[],"/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/store/order.actions.js",[],"/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/hooks/useFormRegister.js",["254"],"import { useEffect, useState } from \"react\"\nimport { useEffectUpdate } from \"./useEffectUpdate\"\n\nexport const useFormRegister = (initialState, callBack) => {\n\n    const [fields, setFields] = useState(initialState)\n\n    useEffectUpdate(() => {\n        if (callBack) callBack(fields)\n    }, [fields])\n\n    const handleChange = ({ target }) => {\n        const field = target.name\n        let value = target.value\n\n        switch (target.type) {\n            case 'number':\n            case 'range':\n                value = +target.value || ''\n                break;\n            case 'checkbox':\n                value = target.checked\n                break;\n            case 'date':\n                value = new Date(value)\n                break;\n            case 'time':\n                const newDate = new Date()\n                const hours = value.split(':')[0]\n                const minutes = value.split(':')[1]\n                newDate.setHours(hours)\n                newDate.setMinutes(minutes)\n                value = newDate\n                break\n            default:\n                break\n        }\n        setFields(prevFields => ({ ...prevFields, [field]: value }))\n    }\n\n    const getFormattedDate = (value) => {\n        const valueDate = new Date(value)\n        return `${valueDate.getFullYear()}-${(valueDate.getMonth() + 1 + '').padStart(2, '0')}-${(valueDate.getDate() + '').padStart(2, '0')}`\n    }\n    const getFormattedTime = (value) => {\n        const valueTime = new Date(value)\n        return `${(valueTime.getHours() + '').padStart(2, '0')}:${(valueTime.getMinutes() + '').padStart(2, '0')}`\n    }\n    const register = (field, type = '', value) => { // value only used when type === 'radio'\n        const inputProp = {\n            onChange: handleChange,\n            name: field,\n            id: field,\n            value: fields[field],\n            type\n        }\n        if (type === 'checkbox') inputProp.checked = fields[field]\n        if (type === 'date') inputProp.value = getFormattedDate(fields[field])\n        if (type === 'time') inputProp.value = getFormattedTime(fields[field])\n        if (type === 'radio') {\n            inputProp.value = value\n            inputProp.id = value\n            inputProp.checked = fields[field] === value\n        }\n        return inputProp\n    }\n    return [register, setFields, fields]\n}","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/cmps/stay-list.jsx",[],"/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/cmps/calender.jsx",["255"],"import React, { useState, useEffect } from \"react\";\n\nimport TextField from '@mui/material/TextField';\nimport { LocalizationProvider } from '@mui/x-date-pickers-pro';\nimport { AdapterDayjs } from '@mui/x-date-pickers-pro/AdapterDayjs';\nimport { StaticDateRangePicker } from '@mui/x-date-pickers-pro/StaticDateRangePicker';\n// import { ThemeProvider, createTheme } from '@mui/material/styles';\n\n\nimport Box from '@mui/material/Box';\nimport { getOrder } from \"../store/order.actions\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { orderService } from \"../services/order.service\";\n\n\nexport function Calender({ stay }) {\n  const { order } = useSelector(state => state.orderModule)\n  const [value, setValue] = useState([order.startDate, order.endDate]);\n  const dispatch = useDispatch()\n\n\n  useEffect(() => {\n    if (!value[0] || !value[1]) return\n    const startDate = new Date(value[0].$d).toLocaleDateString()\n    const endDate = new Date(value[1].$d).toLocaleDateString()\n    const currOrder = { ...order, startDate, endDate }\n    dispatch(getOrder(stay, currOrder))\n\n  }, [value])\n\n\n  const nightsStay = orderService.getDiffDates(order.startDate, order.endDate)\n\n  const getMonthName = (d) => {\n\n    return new Date(d).toLocaleDateString('en-us', { month:\"short\", day:\"numeric\", year:\"numeric\"})\n  }\n\n  return (<section className=\"calender\">\n\n    <h2>{nightsStay ? nightsStay : ''} nights in {stay.loc.city}</h2>\n    <span>{getMonthName(order.startDate)} - {getMonthName(order.endDate)}</span>\n    <LocalizationProvider dateAdapter={AdapterDayjs}>\n\n      <StaticDateRangePicker\n        displayStaticWrapperAs=\"desktop\"\n        value={value}\n        onChange={(newValue) => {\n          setValue(newValue);\n        }}\n        renderInput={(startProps, endProps) => (\n          <React.Fragment>\n            <TextField {...startProps} />\n            <Box sx={{ mx: 2 }}> to </Box>\n            <TextField {...endProps} />\n          </React.Fragment>\n        )}\n      />\n\n    </LocalizationProvider>\n  </section>);\n}\n","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/cmps/reserve.jsx",["256","257","258"],"import { useState } from \"react\"\nimport { useDispatch } from \"react-redux\"\nimport { useSelector } from \"react-redux\"\nimport { Link, useNavigate } from \"react-router-dom\"\nimport { getOrder, saveOrder } from \"../store/order.actions\"\nimport { CalcReserve } from \"./calc-reserve\"\n\n\nimport { ReactComponent as Star } from '../assets/icons/star.svg';\nimport { ReactComponent as Plus } from '../assets/img/vector/plus.svg';\nimport { ReactComponent as Minus } from '../assets/img/vector/minus.svg';\nimport { userService } from \"../services/user.service\"\nimport { showErrorMsg } from \"../services/event-bus.service\"\n\n\nexport const Reserve = ({ stay, avgRate }) => {\n\n    let { order } = useSelector(state => state.orderModule)\n    const [isOpen, setIsOpen] = useState(false)\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n\n    const [guestsCount, setGuestsCount] = useState({\n        adults: 1,\n        children: 0,\n        infants: 0,\n        pets: 0,\n    })\n\n    const toggleMenu = () => {\n        setIsOpen(!isOpen)\n    }\n\n    const onClick = (category, action) => {\n        action = action === '+' ? 1 : -1\n        if (guestsCount[category] + action < 0 || action > stay.capacity) return\n        guestsCount[category] += action\n        setGuestsCount(prevGuestsCount => ({ ...prevGuestsCount }))\n    }\n\n    const submitReserve = () => {\n        if(!userService.getLoggedinUser()) return showErrorMsg('must Logged in')\n        const guests = guestsCount\n        const currOrder = { ...order, guests }\n        dispatch(saveOrder(currOrder)).then(\n        navigate(\"/summary\", {\n            state: {\n                stay,\n                order\n            },\n        }));\n    }\n\n    // const calcTotal = async (total) => {\n    //     const newOrder = await dispatch(getOrder(stay, { ...order, total }))\n    // }\n\n    const mouseMove = (e) => {\n        const rect = e.target.getBoundingClientRect();\n        const mouseX = e.pageX - e.currentTarget.offsetLeft;\n        const mouseY = e.pageY - e.currentTarget.offsetTop;\n        e.currentTarget.style.cssText = `\n    --mouse-x: ${mouseX}; \n    --mouse-y: ${mouseY};\n  `;\n    }\n\n\n    if(!order) return <h1>Loading..</h1>\n    return (\n        <div className=\"reserve-section\" >\n            <div className=\"reserve-form\">\n                <div className=\"reserve\">\n                    <div className=\"reserve-form\">\n                        <div className=\"reserve-header\">\n                            <div>\n                                <div><span className=\"price\">${stay.price}</span><span> night</span></div>\n                            </div>\n                            <div className=\"reserve-rate\">\n                                <div className=\"reserve-star\"><span className=\"star\"><Star /></span><span className=\"avg-rate\"> {avgRate} &middot;</span></div>\n                                <button className=\"reserve-reviews\"><div>{stay.reviews.length} reviews</div></button>\n                            </div>\n                        </div>\n\n                        <div className=\"reserve-info\">\n                            <div className=\"pick-dates\">\n                                <div className=\"dates-first-layer\">\n                                    <div className=\"dates-second-layer\">\n                                        <button className=\"reserve-dates\">\n                                            <div className=\"check-in\">\n                                                <div className=\"txt-reserve\">Check-in</div>\n                                                <div className=\"date-reserve\">{order.startDate ? order.startDate : ''}</div>\n                                            </div>\n                                            <div className=\"check-out\">\n                                                <div className=\"txt-reserve\">Check-out</div>\n                                                <div className=\"date-reserve\">{order.endDate ? order.endDate : ''}</div>\n                                            </div>\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className=\"guest-info\">\n                                <div className=\"guest-first-layer\">\n                                    <div className=\"guest-details-layer\">\n                                        <div className=\"guest-final-details\">\n                                            <button className=\"guests-details\" onClick={() => toggleMenu()}>\n                                                <div className=\"title\">Guests</div>\n                                                <div className=\"guest-section\">\n                                                    <div className=\"guest-description\">\n                                                        {guestsCount.adults + guestsCount.children} guest\n                                                        {(guestsCount.infants) ? ',' + guestsCount.infants + 'infants' : ''}\n                                                        {(guestsCount.pets) ? ',' + guestsCount.pets + 'pets' : ''}\n                                                    </div>\n                                                </div>\n\n                                            </button>\n                                        </div>\n                                        {isOpen &&\n\n                                            <div className=\"select-guests\">\n                                                <div className=\"pick-guest-account\">\n                                                    <div>\n                                                        <h3>Adults</h3>\n                                                        <h5>Age 13+</h5>\n                                                    </div>\n                                                    <div className=\"choose-amount\">\n                                                        <div>\n                                                        <button onClick={() => onClick('adults', '-')}><Minus/></button>\n                                                            <span>{guestsCount.adults}</span>\n                                                            <button onClick={() => onClick('adults', '+')}><Plus/></button>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div className=\"pick-guest-account\">\n                                                    <div>\n                                                        <h3>Children</h3>\n                                                        <h5>Ages 2-12</h5>\n                                                    </div>\n                                                    <div className=\"choose-amount\">\n                                                        <div>\n                                                            <button onClick={() => onClick('children', '-')}><Minus/></button>\n                                                            <span>{guestsCount.children}</span>\n                                                            <button onClick={() => onClick('children', '+')}><Plus/></button>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div className=\"pick-guest-account\">\n                                                    <div>\n                                                        <h3>Infants</h3>\n                                                        <h5>Under 2</h5>\n                                                    </div>\n                                                    <div className=\"choose-amount\">\n                                                        <div>\n                                                            <button onClick={() => onClick('infants', '-')}><Minus/></button>\n                                                            <span>{guestsCount.infants}</span>\n                                                            <button onClick={() => onClick('infants', '+')}><Plus/></button>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div className=\"pick-guest-account\">\n                                                    <div>\n                                                        <h3>Pets</h3>\n                                                    </div>\n                                                    <div className=\"choose-amount\">\n                                                        <div>\n                                                            <button onClick={() => onClick('pets', '-')}><Minus/></button>\n                                                            <span>{guestsCount.pets}</span>\n                                                            <button onClick={() => onClick('pets', '+')}><Plus/></button>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <button className=\"close-btn-reserve\" onClick={() => toggleMenu()}>close</button>\n                                            </div>\n                                        }\n                                    </div>\n\n                                </div>\n\n\n                            </div>\n                        </div>\n\n                        <div className=\"reserve-btn-section\">\n                            {/* <Link to={{ pathname: \"/summary/\", state: {order: order}}}> */}\n                            <div className=\"min-h-screen flex flex-col items-center justify-center bg-gray-100\" onClick={() => submitReserve()}>\n                                <button onMouseMove={(e) => mouseMove(e)} id=\"gradientBtn\">\n                                    <span className=\"absolute inset-0 gradient opacity-0 transition-opacity duration-300\"></span>\n                                    <span className=\"relative z-1 pointer-events-none\">Reserve</span>\n                                </button>\n                            </div>\n\n                            {/* </Link> */}\n                        </div>\n\n                        {order.endDate &&\n                            <section>\n                                <div className=\"msg-txt\">\n                                    <div>You won't be charged yet</div>\n                                </div>\n                                <CalcReserve stay={stay}/>\n                            </section>\n                        }\n\n                    </div>\n                </div>\n            </div>\n        </div>\n\n\n    )\n}","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/cmps/stay-review.jsx",["259"],"import { useState } from 'react';\n\nimport { ReactComponent as Star } from '../assets/icons/star.svg';\nimport { ReactComponent as User } from '../assets/icons/user.svg';\n\nexport const Review = ({ stay, avgRate }) => {   \n    const [isOpen, setIsOpen] = useState(false)\n\n    const getREviews = (minSize = 0, size = 6) => {\n        return stay.reviews.map((review, idx) =>\n            <div key= {idx} className='review'>\n                <div className='reviewer-header-details'>\n                    <div className='reviewer-img'><img src=\"https://xsgames.co/randomusers/avatar.php?g=male\" alt=\"\"/></div>\n                   \n                    <div className='reviewer-details'>\n                        <h3 className='reviewer-name'>{review.by.fullname}</h3>\n                        <div className='review-date'>{\n                        new Date(review.at).toLocaleDateString('en-us', { month:\"long\", year:\"numeric\"})\n                        \n                        }</div>\n                    </div>\n                </div>\n    \n                <div className='review-body'>\n                    {review.txt}\n                </div>\n            </div>).slice(minSize, size)\n    }\n\n    const toggleIsOpen = () => {\n        setIsOpen(!isOpen)\n    }\n\n\n\n    return (\n        <section className=\"reviews\">\n            <div className='review-header'>\n                <div className='reviews-rate'>\n                    <div><Star /></div>\n                    <div>{avgRate}</div>&middot;\n                </div>\n                <div>{stay.reviews.length} reviews</div>\n            </div>\n\n            <div className={`reviews-section ${isOpen}`}>\n                {!isOpen ?  getREviews() : getREviews(0, stay.reviews.length)}\n            </div>\n            <div className='show-all-btn'>\n                <div onClick={() => toggleIsOpen()}>\n                    {!isOpen ?  ` Show all ${stay.reviews.length} reviews` : 'Show less'}\n                   \n                </div>\n            </div>\n        </section>\n    )\n}","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/cmps/header-cmps/details-header.jsx",[],"/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/cmps/calc-reserve.jsx",["260"],"import { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport { orderService } from '../services/order.service'\nimport { getOrder } from \"../store/order.actions\";\n\n\nexport const CalcReserve = ({ stay}) => {\n    // to change all distructuring\n    const { order } = useSelector(state => state.orderModule)\n    const dispatch = useDispatch()\n\n   \n\n    const nightsStay = orderService.getDiffDates(order.startDate, order.endDate)\n    const total = (stay.price * nightsStay) + 10 + 11 + (nightsStay * 10)\n    useEffect(() => {\n        dispatch(getOrder(stay, { ...order, total }))\n    }, [nightsStay])\n\n\n    return (\n        <section className=\"calc-reserve\">\n            <div className=\"total-price-nights flex\">\n                <div>${stay.price} x {nightsStay} nights</div>\n                <div>${stay.price * nightsStay}</div>\n            </div>\n            <div className=\"cleaning-fee flex\">\n                <div>Cleaning fee</div>\n                <div>$10</div>\n            </div>\n            <div className=\"service-fee flex\">\n                <div>Service fee</div>\n                <div>${11 + nightsStay * 10}</div>\n            </div>\n            <div className=\"total\">\n                <div className=\"total-amount flex\">\n                    <div>Total</div>\n                    <div>${total}</div>\n                </div>\n            </div>\n        </section>\n    )\n}","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/cmps/stayDetails/stay-air-cover.jsx",[],"/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/cmps/filter/stay-filter.jsx",[],"/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/cmps/stayDetails/stay-keys.jsx",[],"/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/cmps/stayDetails/stay-amenities.jsx",[],"/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/services/util.service.js",[],"/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/cmps/header-cmps/guests-selection.jsx",[],"/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/cmps/calender-date-picker.jsx",[],"/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/hooks/useEffectUpdate.js",["261","262"],"import { useEffect, useRef } from \"react\"\n\nexport const useEffectUpdate = (callBack, dependencies) => {\n    \n    const isFirst = useRef(true)\n\n    useEffect(()=>{\n        if (isFirst.current) {\n            isFirst.current = false\n            return\n        }   \n        callBack()\n    }, dependencies)\n    \n}","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/cmps/stay-preview.jsx",["263"],"import { Star } from \"@mui/icons-material\";\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { stayService } from \"../services/stay.service\";\n\nexport function StayPreview({ stay }) {\n    \n    const params = useParams()\n    const { checkInDate, checkOutDate } = params\n\n    const avgRate = () => {\n        return stayService.avgRate(stay)\n    }\n\n    if (!stay)return\n\n    return (\n        <div key={stay._id} className='stay-preview'>\n            <img src={stay.imgUrls[0]} />\n            <div>\n                <div className=\"preview-title\">\n                    <p><span>{stay.loc.city}, {stay.loc.country}</span></p>\n                    <span className=\"rate-star\"><Star /> {avgRate()}</span>\n                </div>\n                {/* {stay.type} */}\n                {/* roomType {stay.roomType} */}\n                {!checkInDate && !checkOutDate && <p>{stay.loc.address.slice(0, 27)}</p>}\n                {/* {checkInDate && checkOutDate && <p>{stay.summary.slice(0, 25)}...</p>} */}\n                {checkInDate && checkOutDate && <p>{stay.beds} beds</p>}\n                {/* {isSameMonth  && <p > {checkInDateMonth} {checkInDatedDate.getDate()} - {checkOutDateDate.getDate()} </p>} */}\n                <p className=\"price\"><span>${stay.price}</span> night</p>\n            </div>\n        </div>\n    )\n}","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/cmps/filter/expanded-filter.jsx",[],"/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/cmps/filter/filter-by-lables.jsx",["264","265"],"import React from 'react';\n\nimport OMG from '../../assets/img/vector/omg.jpg'\nimport Lakefront from '../../assets/img/vector/lakefront.jpg'\nimport Beach from '../../assets/img/vector/beach.jpg'\nimport Islands from '../../assets/img/vector/islands.jpg'\nimport Cabins from '../../assets/img/vector/cabins.jpg'\nimport Design from '../../assets/img/vector/Design.jpg'\nimport Campers from '../../assets/img/vector/Campers.jpg'\nimport Caves from '../../assets/img/vector/Caves.jpg'\nimport Castles from '../../assets/img/vector/Castles.jpg'\nimport Beachfront from '../../assets/img/vector/Beachfront.jpg'\nimport SharedHomes from '../../assets/img/vector/shared-homes.jpg'\nimport AmazingViews from '../../assets/img/vector/amazing-views.jpg'\nimport NationalParks from '../../assets/img/vector/National parks.jpg'\nimport AmazingPools from '../../assets/img/vector/amazing-pools.jpg'\n\nexport const LabelsFilter = ({ onChangeFilter, filterBy }) => {\n\n    const labels = [{ 'OMG!': OMG }, { 'Lakefront': Lakefront }, { 'Beach': Beach }, { 'Cabins': Cabins },\n    { 'Design': Design }, { 'Campers': Campers }, { 'Caves': Caves }, { 'Castles': Castles },\n    { 'Beachfront': Beachfront }, { 'Shared homes': SharedHomes }, { 'Amazing views': AmazingViews },\n    { 'National parks': NationalParks }, { 'Amazing pools': AmazingPools }]\n\n\n    return <section className=\"filter-by-labels\">\n        {labels.map((label, idx) => {\n            let labelClass = ''\n            { if (filterBy.label && filterBy.label === Object.keys(label).toString()) labelClass = 'chosen-label' }\n\n            return <div key={idx} className={`filter-by-label ${labelClass}` } onClick={() => onChangeFilter({ label: Object.keys(label).toString() })} >\n                <img src={Object.values(label)} alt=\"\" />\n                <p className='label-name'>{Object.keys(label).toString()}</p>\n            </div>\n        })}\n    </section>\n}\n\n// export const LabelsFilter = ({ onChangeFilter }) => {\n\n//     const labels = [{ 'OMG!': OMG }, { 'Lakefront': Lakefront }, { 'Beach': Beach }, { 'Cabins': Cabins },\n//     { 'Design': Design }, { 'Campers': Campers },{ 'Caves': Caves }, { 'Castles': Castles },\n//     { 'Beachfront': Beachfront }, { 'Shared homes': SharedHomes }, { 'Amazing views': AmazingViews },\n//     { 'National parks': NationalParks },{ 'Amazing pools':  AmazingPools}]\n\n//     return <section className=\"filter-by-labels\">\n//         {labels.map((label, idx) => {\n//             return <div key={idx} className=\"filter-by-label\" onClick={() => onChangeFilter({ label: Object.keys(label).toString() })} >\n//                 <img src={Object.values(label)} alt=\"\" />\n//                 <p className='label-name'>{Object.keys(label).toString()}</p>\n//             </div>\n//         })}\n//     </section>\n// }","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/cmps/user-msg.jsx",[],"/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/pages/dashboard.jsx",["266","267","268","269","270","271"],"import React from \"react\";\nimport ChartistGraph from \"react-chartist\";\n// react-bootstrap components\nimport {\n  Badge,\n  Button,\n  Card,\n  Table,\n  Container,\n  Row,\n  Col,\n  Form,\n  OverlayTrigger,\n  Tooltip,\n} from \"react-bootstrap\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../assets/css/animate.min.css\";\nimport \"../assets/styles/main.scss\";\nimport \"../assets/css/demo.css\";\nimport { TableOrders } from \"./table-orders\";\n\n\nexport function Dashboard() {\n  return (\n    <>\n   \n    \n      <Container fluid>\n        <Row>\n          <Col lg=\"3\" sm=\"6\">\n            <Card className=\"card-stats\">\n              <Card.Body>\n                <Row>\n                  <Col xs=\"5\">\n                    <div className=\"icon-big text-center icon-warning\">\n                      <i className=\"nc-icon nc-chart text-warning\"></i>\n                    </div>\n                  </Col>\n                  <Col xs=\"7\">\n                    <div className=\"numbers\">\n                      <p className=\"card-category\">Number</p>\n                      <Card.Title as=\"h4\">150GB</Card.Title>\n                    </div>\n                  </Col>\n                </Row>\n              </Card.Body>\n              <Card.Footer>\n                <hr></hr>\n                <div className=\"stats\">\n                  <i className=\"fas fa-redo mr-1\"></i>\n                  Update Now\n                </div>\n              </Card.Footer>\n            </Card>\n          </Col>\n          <Col lg=\"3\" sm=\"6\">\n            <Card className=\"card-stats\">\n              <Card.Body>\n                <Row>\n                  <Col xs=\"5\">\n                    <div className=\"icon-big text-center icon-warning\">\n                      <i className=\"nc-icon nc-light-3 text-success\"></i>\n                    </div>\n                  </Col>\n                  <Col xs=\"7\">\n                    <div className=\"numbers\">\n                      <p className=\"card-category\">Revenue</p>\n                      <Card.Title as=\"h4\">$ 1,345</Card.Title>\n                    </div>\n                  </Col>\n                </Row>\n              </Card.Body>\n              <Card.Footer>\n                <hr></hr>\n                <div className=\"stats\">\n                  <i className=\"far fa-calendar-alt mr-1\"></i>\n                  Last day\n                </div>\n              </Card.Footer>\n            </Card>\n          </Col>\n          <Col lg=\"3\" sm=\"6\">\n            <Card className=\"card-stats\">\n              <Card.Body>\n                <Row>\n                  <Col xs=\"5\">\n                    <div className=\"icon-big text-center icon-warning\">\n                      <i className=\"nc-icon nc-vector text-danger\"></i>\n                    </div>\n                  </Col>\n                  <Col xs=\"7\">\n                    <div className=\"numbers\">\n                      <p className=\"card-category\">Errors</p>\n                      <Card.Title as=\"h4\">23</Card.Title>\n                    </div>\n                  </Col>\n                </Row>\n              </Card.Body>\n              <Card.Footer>\n                <hr></hr>\n                <div className=\"stats\">\n                  <i className=\"far fa-clock-o mr-1\"></i>\n                  In the last hour\n                </div>\n              </Card.Footer>\n            </Card>\n          </Col>\n          <Col lg=\"3\" sm=\"6\">\n            <Card className=\"card-stats\">\n              <Card.Body>\n                <Row>\n                  <Col xs=\"5\">\n                    <div className=\"icon-big text-center icon-warning\">\n                      <i className=\"nc-icon nc-favourite-28 text-primary\"></i>\n                    </div>\n                  </Col>\n                  <Col xs=\"7\">\n                    <div className=\"numbers\">\n                      <p className=\"card-category\">Followers</p>\n                      <Card.Title as=\"h4\">+45K</Card.Title>\n                    </div>\n                  </Col>\n                </Row>\n              </Card.Body>\n              <Card.Footer>\n                <hr></hr>\n                <div className=\"stats\">\n                  <i className=\"fas fa-redo mr-1\"></i>\n                  Update now\n                </div>\n              </Card.Footer>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col md=\"8\">\n            <Card>\n              <Card.Header>\n                <Card.Title as=\"h4\">Users Behavior</Card.Title>\n                <p className=\"card-category\">24 Hours performance</p>\n              </Card.Header>\n              <Card.Body>\n                <div className=\"ct-chart\" id=\"chartDays\">\n                  <ChartistGraph\n                    data={{\n                      labels: [\n                        \"9:00AM\",\n                        \"12:00AM\",\n                        \"3:00PM\",\n                        \"6:00PM\",\n                        \"9:00PM\",\n                        \"12:00PM\",\n                        \"3:00AM\",\n                        \"6:00AM\",\n                      ],\n                      series: [\n                        [287, 385, 490, 492, 554, 586, 698, 695],\n                        [67, 152, 143, 240, 287, 335, 435, 437],\n                        [23, 113, 67, 108, 190, 239, 307, 308],\n                      ],\n                    }}\n                    type=\"Line\"\n                    options={{\n                      low: 0,\n                      high: 800,\n                      showArea: false,\n                      height: \"245px\",\n                      axisX: {\n                        showGrid: false,\n                      },\n                      lineSmooth: true,\n                      showLine: true,\n                      showPoint: true,\n                      fullWidth: true,\n                      chartPadding: {\n                        right: 50,\n                      },\n                    }}\n                    responsiveOptions={[\n                      [\n                        \"screen and (max-width: 640px)\",\n                        {\n                          axisX: {\n                            labelInterpolationFnc: function (value) {\n                              return value[0];\n                            },\n                          },\n                        },\n                      ],\n                    ]}\n                  />\n                </div>\n              </Card.Body>\n              <Card.Footer>\n                <div className=\"legend\">\n                  <i className=\"fas fa-circle text-info\"></i>\n                  Open <i className=\"fas fa-circle text-danger\"></i>\n                  Click <i className=\"fas fa-circle text-warning\"></i>\n                  Click Second Time\n                </div>\n                <hr></hr>\n                <div className=\"stats\">\n                  <i className=\"fas fa-history\"></i>\n                  Updated 3 minutes ago\n                </div>\n              </Card.Footer>\n            </Card>\n          </Col>\n          <Col md=\"4\">\n            <Card>\n              <Card.Header>\n                <Card.Title as=\"h4\">Email Statistics</Card.Title>\n                <p className=\"card-category\">Last Campaign Performance</p>\n              </Card.Header>\n              <Card.Body>\n                <div\n                  className=\"ct-chart ct-perfect-fourth\"\n                  id=\"chartPreferences\"\n                >\n                  <ChartistGraph\n                    data={{\n                      labels: [\"40%\", \"20%\", \"40%\"],\n                      series: [40, 20, 40],\n                    }}\n                    type=\"Pie\"\n                  />\n                </div>\n                <div className=\"legend\">\n                  <i className=\"fas fa-circle text-info\"></i>\n                  Open <i className=\"fas fa-circle text-danger\"></i>\n                  Bounce <i className=\"fas fa-circle text-warning\"></i>\n                  Unsubscribe\n                </div>\n                <hr></hr>\n                <div className=\"stats\">\n                  <i className=\"far fa-clock\"></i>\n                  Campaign sent 2 days ago\n                </div>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n         <Row> \n          <Col md=\"12\">\n            <Card>\n              <Card.Header>\n                <Card.Title as=\"h4\">2017 Sales</Card.Title>\n                <p className=\"card-category\">All products including Taxes</p>\n              </Card.Header>\n              <Card.Body>\n                <TableOrders/>\n              </Card.Body>\n              <Card.Footer>\n                <div className=\"legend\">\n                  <i className=\"fas fa-circle text-info\"></i>\n                  Tesla Model S <i className=\"fas fa-circle text-danger\"></i>\n                  BMW 5 Series\n                </div>\n                <hr></hr>\n                <div className=\"stats\">\n                  <i className=\"fas fa-check\"></i>\n                  Data information certified\n                </div>\n              </Card.Footer>\n            </Card>\n          </Col>\n          \n        </Row> \n      </Container>\n    </>\n  );\n}\n\n","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/pages/table-orders.jsx",["272","273","274"],"import * as React from 'react';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport { useState } from \"react\"\nimport { useEffect } from \"react\"\nimport { orderService } from \"../services/order.service\"\nimport { userService } from \"../services/user.service\"\nimport { useDispatch } from 'react-redux';\nimport { getOrders, saveOrder } from '../store/order.actions';\n\n\nconst columns = [\n    { id: 'stayName', label: 'stay-name', minWidth: 170 },\n    { id: 'startDate', label: 'arrive-at', minWidth: 100 },\n    { id: 'endDate', label: 'leave-at', minWidth: 100 },\n    {\n        id: 'total',\n        label: 'Total',\n        minWidth: 170,\n        align: 'right',\n        format: (value) => value.toLocaleString('en-US'),\n    },\n    {\n        id: 'status',\n        label: 'status',\n        minWidth: 100\n    }\n\n];\n\nfunction createData(stayName, startDate, endDate, total, status, id) {\n\n    return { stayName, startDate, endDate, total, status, id };\n}\n\n\n\n\nexport function TableOrders() {\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n    const [orders, setOrders] = useState([])\n    const [rows, setRows] = useState([])\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        loadOrders()\n    }, [orders])\n\n    const loadOrders = async () => {\n        const orders = await orderService.query()\n        setOrders(orders)\n        setRows(orders.map(order => createData(order.stay.name, order.startDate, order.endDate, order.total, order.status, order._id)))\n        dispatch(getOrders())\n    }\n\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n\n    const checkStatus = (value) => {\n        let color\n        switch (value) {\n            case 'pending':\n                color = 'orange'\n                break;\n            case 'confirmed':\n                color = 'green'\n                break;\n            case 'rejected':\n                color = 'red';\n                break;\n            default:\n                color = 'black';\n                break;\n        }\n        return color\n    }\n\n    const handleChange = async (ev, id) => {\n        const value = ev.target.value\n        let order = await orderService.getById(id)\n        order.status = value\n        order = await orderService.save(order)\n\n        const newOrders = orders.filter(ord => ord._id !== order._id)\n        setOrders([newOrders, order])\n      \n    }\n\n    if (!rows) return <h1>Loading ..</h1>\n    return (\n        <Paper sx={{ width: '100%', overflow: 'hidden', margin: 0}}>\n            <TableContainer sx={{ maxHeight: 440 }}>\n                <Table stickyHeader aria-label=\"sticky table\">\n                    <TableHead>\n                        <TableRow>\n                            {columns.map((column) => (\n                                <TableCell\n                                    key={column.id}\n                                    align={column.align}\n                                    style={{ minWidth: column.minWidth }}\n                                >\n                                    {column.label}\n                                </TableCell>\n                            ))}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {rows\n                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                            .map((row) => {\n                                return (\n                                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\n                                        {columns.map((column) => {\n                                            const value = row[column.id];\n                                            return <React.Fragment>\n                                                {column.id === 'status' ?\n                                                    <TableCell key={column.id} align={column.align} style={{ color: checkStatus(value) }}>\n                                                       \n                                                        <select name=\"status\" id=\"status\" value={row.status} onChange={(event) => handleChange(event, row.id)}>\n                                                            <option value=\"pending\">pending</option>\n                                                            <option value=\"confirmed\">confirmed</option>\n                                                            <option value=\"rejected\">rejected</option>\n                                                            \n                                                        </select>\n\n                                                    </TableCell>\n                                                    :\n\n                                                    <TableCell key={column.id} align={column.align}>\n                                                        {column.format && typeof value === 'number'\n                                                            ? column.format(value)\n                                                            : value}\n                                                    </TableCell>\n                                                }\n\n                                            </React.Fragment>\n\n                                        })}\n                                    </TableRow>\n                                );\n                            })}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <TablePagination\n                rowsPerPageOptions={[10, 25, 100]}\n                component=\"div\"\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onPageChange={handleChangePage}\n                onRowsPerPageChange={handleChangeRowsPerPage}\n            />\n        </Paper>\n    );\n}","/Users/davidlaufer/dev/coding-academy/sprint4-git-front/sprint4/src/services/socket.service.js",[],{"ruleId":"275","replacedBy":"276"},{"ruleId":"277","replacedBy":"278"},{"ruleId":"279","severity":1,"message":"280","line":11,"column":7,"nodeType":"281","messageId":"282","endLine":11,"endColumn":15},{"ruleId":"283","severity":1,"message":"284","line":35,"column":6,"nodeType":"285","endLine":35,"endColumn":8,"suggestions":"286"},{"ruleId":"279","severity":1,"message":"287","line":2,"column":22,"nodeType":"281","messageId":"282","endLine":2,"endColumn":33},{"ruleId":"279","severity":1,"message":"288","line":4,"column":10,"nodeType":"281","messageId":"282","endLine":4,"endColumn":22},{"ruleId":"279","severity":1,"message":"289","line":5,"column":10,"nodeType":"281","messageId":"282","endLine":5,"endColumn":21},{"ruleId":"283","severity":1,"message":"290","line":54,"column":6,"nodeType":"285","endLine":54,"endColumn":8,"suggestions":"291"},{"ruleId":"279","severity":1,"message":"292","line":8,"column":10,"nodeType":"281","messageId":"282","endLine":8,"endColumn":19},{"ruleId":"283","severity":1,"message":"284","line":17,"column":8,"nodeType":"285","endLine":17,"endColumn":10,"suggestions":"293"},{"ruleId":"283","severity":1,"message":"294","line":55,"column":8,"nodeType":"285","endLine":55,"endColumn":10,"suggestions":"295"},{"ruleId":"279","severity":1,"message":"296","line":16,"column":22,"nodeType":"281","messageId":"282","endLine":16,"endColumn":29},{"ruleId":"283","severity":1,"message":"297","line":35,"column":8,"nodeType":"285","endLine":35,"endColumn":10,"suggestions":"298"},{"ruleId":"279","severity":1,"message":"299","line":49,"column":12,"nodeType":"281","messageId":"282","endLine":49,"endColumn":18},{"ruleId":"279","severity":1,"message":"300","line":49,"column":20,"nodeType":"281","messageId":"282","endLine":49,"endColumn":29},{"ruleId":"275","replacedBy":"301"},{"ruleId":"277","replacedBy":"302"},{"ruleId":"279","severity":1,"message":"303","line":6,"column":10,"nodeType":"281","messageId":"282","endLine":6,"endColumn":23},{"ruleId":"279","severity":1,"message":"304","line":31,"column":7,"nodeType":"281","messageId":"282","endLine":31,"endColumn":15},{"ruleId":"275","replacedBy":"305"},{"ruleId":"277","replacedBy":"306"},{"ruleId":"279","severity":1,"message":"307","line":1,"column":10,"nodeType":"281","messageId":"282","endLine":1,"endColumn":19},{"ruleId":"283","severity":1,"message":"308","line":30,"column":6,"nodeType":"285","endLine":30,"endColumn":13,"suggestions":"309"},{"ruleId":"279","severity":1,"message":"310","line":4,"column":10,"nodeType":"281","messageId":"282","endLine":4,"endColumn":14},{"ruleId":"279","severity":1,"message":"311","line":5,"column":10,"nodeType":"281","messageId":"282","endLine":5,"endColumn":18},{"ruleId":"279","severity":1,"message":"312","line":59,"column":15,"nodeType":"281","messageId":"282","endLine":59,"endColumn":19},{"ruleId":"279","severity":1,"message":"313","line":4,"column":28,"nodeType":"281","messageId":"282","endLine":4,"endColumn":32},{"ruleId":"283","severity":1,"message":"314","line":19,"column":8,"nodeType":"285","endLine":19,"endColumn":20,"suggestions":"315"},{"ruleId":"283","severity":1,"message":"316","line":13,"column":8,"nodeType":"281","endLine":13,"endColumn":20},{"ruleId":"283","severity":1,"message":"317","line":13,"column":8,"nodeType":"281","endLine":13,"endColumn":20,"suggestions":"318"},{"ruleId":"319","severity":1,"message":"320","line":19,"column":13,"nodeType":"321","endLine":19,"endColumn":42},{"ruleId":"279","severity":1,"message":"322","line":6,"column":8,"nodeType":"281","messageId":"282","endLine":6,"endColumn":15},{"ruleId":"323","severity":1,"message":"324","line":29,"column":13,"nodeType":"325","messageId":"326","endLine":29,"endColumn":116},{"ruleId":"279","severity":1,"message":"327","line":5,"column":3,"nodeType":"281","messageId":"282","endLine":5,"endColumn":8},{"ruleId":"279","severity":1,"message":"328","line":6,"column":3,"nodeType":"281","messageId":"282","endLine":6,"endColumn":9},{"ruleId":"279","severity":1,"message":"329","line":8,"column":3,"nodeType":"281","messageId":"282","endLine":8,"endColumn":8},{"ruleId":"279","severity":1,"message":"330","line":12,"column":3,"nodeType":"281","messageId":"282","endLine":12,"endColumn":7},{"ruleId":"279","severity":1,"message":"331","line":13,"column":3,"nodeType":"281","messageId":"282","endLine":13,"endColumn":17},{"ruleId":"279","severity":1,"message":"332","line":14,"column":3,"nodeType":"281","messageId":"282","endLine":14,"endColumn":10},{"ruleId":"279","severity":1,"message":"289","line":13,"column":10,"nodeType":"281","messageId":"282","endLine":13,"endColumn":21},{"ruleId":"279","severity":1,"message":"333","line":15,"column":21,"nodeType":"281","messageId":"282","endLine":15,"endColumn":30},{"ruleId":"283","severity":1,"message":"290","line":55,"column":8,"nodeType":"285","endLine":55,"endColumn":16,"suggestions":"334"},"no-native-reassign",["335"],"no-negated-in-lhs",["336"],"no-unused-vars","'BASE_URL' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["337"],"'useSelector' is defined but never used.","'orderService' is defined but never used.","'userService' is defined but never used.","React Hook useEffect has a missing dependency: 'loadOrders'. Either include it or remove the dependency array.",["338"],"'getOrders' is defined but never used.",["339"],"React Hook useEffect has a missing dependency: 'loadStay'. Either include it or remove the dependency array.",["340"],"'setStay' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'params.stayId'. Either include it or remove the dependency array.",["341"],"'status' is assigned a value but never used.","'setStatus' is assigned a value but never used.",["335"],["336"],"'socketService' is defined but never used.","'queryStr' is assigned a value but never used.",["335"],["336"],"'useEffect' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'order', and 'stay'. Either include them or remove the dependency array.",["342"],"'Link' is defined but never used.","'getOrder' is defined but never used.","'rect' is assigned a value but never used.","'User' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'order', 'stay', and 'total'. Either include them or remove the dependency array.",["343"],"React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has a missing dependency: 'callBack'. Either include it or remove the dependency array. If 'callBack' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["344"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Islands' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Badge' is defined but never used.","'Button' is defined but never used.","'Table' is defined but never used.","'Form' is defined but never used.","'OverlayTrigger' is defined but never used.","'Tooltip' is defined but never used.","'saveOrder' is defined but never used.",["345"],"no-global-assign","no-unsafe-negation",{"desc":"346","fix":"347"},{"desc":"348","fix":"349"},{"desc":"346","fix":"350"},{"desc":"351","fix":"352"},{"desc":"353","fix":"354"},{"desc":"355","fix":"356"},{"desc":"357","fix":"358"},{"desc":"359","fix":"360"},{"desc":"361","fix":"362"},"Update the dependencies array to be: [dispatch]",{"range":"363","text":"364"},"Update the dependencies array to be: [loadOrders]",{"range":"365","text":"366"},{"range":"367","text":"364"},"Update the dependencies array to be: [loadStay]",{"range":"368","text":"369"},"Update the dependencies array to be: [params.stayId]",{"range":"370","text":"371"},"Update the dependencies array to be: [dispatch, order, stay, value]",{"range":"372","text":"373"},"Update the dependencies array to be: [dispatch, nightsStay, order, stay, total]",{"range":"374","text":"375"},"Update the dependencies array to be: [callBack]",{"range":"376","text":"377"},"Update the dependencies array to be: [loadOrders, orders]",{"range":"378","text":"379"},[1211,1213],"[dispatch]",[1548,1550],"[loadOrders]",[588,590],[1862,1864],"[loadStay]",[936,938],"[params.stayId]",[1120,1127],"[dispatch, order, stay, value]",[649,661],"[dispatch, nightsStay, order, stay, total]",[288,300],"[callBack]",[1614,1622],"[loadOrders, orders]"]